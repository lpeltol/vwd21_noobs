{"version":3,"sources":["components/Canvas/Canvas.js","drawUtils/draw.js","components/WebCam/WebCam.js","App.js","index.js"],"names":["Canvas","id","bullet","shots","WebCam","useState","video","setVideo","undefined","model","setModel","useEffect","handTrack","flipHorizontal","imageScaleFactor","maxNumBoxes","iouThreshold","scoreThreshold","then","document","querySelector","width","height","navigator","mediaDevices","getUserMedia","console","log","stream","srcObject","catch","error","StreamVideo","className","Fragment","autoPlay","onClick","detect","predictions","bbox","canvas","ctx","getContext","boxX","boxY","boxWidth","boxHeight","ratio","clearRect","r","save","beginPath","translate","moveTo","arc","Math","PI","lineTo","lineWidth","strokeStyle","stroke","restore","fontSize","floor","font","fillStyle","fillText","draw","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"6fAEaA,EAAS,SAACC,GACrB,OAAO,wBAAQA,GAAIA,K,QCHjBC,GAAS,EACTC,EAAQ,GCyBCC,EAAS,WAAO,IAAD,EACAC,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,OAEAF,wBAASG,GAFT,mBAEnBC,EAFmB,KAEZC,EAFY,KAI1BC,qBAAU,WAQRC,IAPoB,CAClBC,gBAAgB,EAChBC,iBAAkB,EAClBC,YAAa,EACbC,aAAc,GACdC,eAAgB,MAEUC,MAAK,SAACT,GAChCC,EAASD,GACTF,EAhCc,WAClB,IAAID,EAAQa,SAASC,cAAc,UAcnC,OAbAd,EAAMe,MAJK,IAKXf,EAAMgB,OALK,IAMPC,UAAUC,aAAaC,eACzBC,QAAQC,IAAIJ,UAAUC,aAAaC,cACnCF,UAAUC,aACPC,aAAa,CAAEnB,OAAO,IACtBY,MAAK,SAAUU,GACdtB,EAAMuB,UAAYD,KAEnBE,OAAM,SAAUC,GACfL,QAAQC,IAAI,6BAGXrB,EAiBM0B,SAEV,IAWH,OACE,qBAAK/B,GAAG,YAAYgC,UAAW,gBAA/B,SACGxB,EACC,eAAC,IAAMyB,SAAP,WACE,uBAAOC,UAAU,EAAMlC,GAAG,UAC1B,wBAAQmC,QAdD,SAATC,IACJ5B,EAAM4B,OAAO/B,GAAOY,MAAK,SAACoB,GACN,IAAD,EAAbA,GD3CU,SAACC,EAAMjC,GACzB,GAAIiC,EAAM,CACR,IAAIC,EAASrB,SAASC,cAAc,UAChCqB,EAAMD,EAAOE,WAAW,MAExBC,EAAOJ,EAAK,GACZK,EAAOL,EAAK,GACZM,EAAWN,EAAK,GAChBO,EAAYP,EAAK,GACjBQ,EAAQF,EAAWC,EAEvBN,EAAOlB,OAAP,OAAgBhB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOgB,OACvBkB,EAAOnB,MAAP,OAAef,QAAf,IAAeA,OAAf,EAAeA,EAAOe,MACtBoB,EAAIO,UAAU,EAAG,EAAGR,EAAOnB,MAAOmB,EAAOlB,QAGzC,IAAI2B,EAAmB,IAAfT,EAAOnB,MAsBf,GArBAoB,EAAIS,OACJT,EAAIU,YACJV,EAAIW,UAAUT,EAAOE,EAAW,EAAGD,EAAOE,EAAY,GAGtDL,EAAIY,OAAO,EAAG,GACdZ,EAAIa,IAAI,EAAG,EAAGL,EAAG,EAAa,EAAVM,KAAKC,IAGzBf,EAAIY,OAAO,EAAG,EAAIJ,GAClBR,EAAIgB,OAAO,EAAG,EAAIR,GAGlBR,EAAIY,OAAO,EAAIJ,EAAG,GAClBR,EAAIgB,OAAO,EAAIR,EAAG,GAElBR,EAAIiB,UAAY,EAChBjB,EAAIkB,YAAc,MAClBlB,EAAImB,SACJnB,EAAIoB,UAEAd,EAAO,CACT,IAAIe,EAAWP,KAAKQ,MAAqB,GAAfvB,EAAOnB,OACjCoB,EAAIuB,KAAOF,EAAW,WACtBrB,EAAIwB,UAAY,QACZlB,EAAQ,IACVN,EAAIyB,SAAS,SAAU,IAAK,KAC5BhE,GAAS,IAETuC,EAAIyB,SAAS,SAAU,IAAK,KACxBhE,IACFC,EAAK,sBAAOA,GAAP,CAAc,CAACwC,EAAOE,EAAW,EAAGD,EAAOK,EAAE,GAAK,KACvD/C,GAAS,MCLXiE,CAAI,UAAC7B,EAAY,UAAb,aAAC,EAAgBC,KAAMjC,GAE7B+B,QASI,0BACA,cAAC,EAAD,CAAQpC,GAAI,gBAGd,sBAAMgC,UAAW,cAAjB,8BCnDOmC,MARf,WACE,OACE,qBAAKnC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASqD,eAAe,W","file":"static/js/main.2b126b9c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Canvas = (id) => {\r\n  return <canvas id={id} />;\r\n};\r\n","let bullet = true;\r\nlet shots = [];\r\n\r\nexport const draw = (bbox, video) => {\r\n  if (bbox) {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n\r\n    var boxX = bbox[0];\r\n    var boxY = bbox[1];\r\n    var boxWidth = bbox[2];\r\n    var boxHeight = bbox[3];\r\n    var ratio = boxWidth / boxHeight;\r\n\r\n    canvas.height = video?.height;\r\n    canvas.width = video?.width;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    //ctx.drawImage(video, 0, 0);\r\n\r\n    var r = canvas.width * 0.05;\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.translate(boxX + boxWidth / 2, boxY + boxHeight / 2);\r\n\r\n    // Circle\r\n    ctx.moveTo(0, 0);\r\n    ctx.arc(0, 0, r, 0, Math.PI * 2);\r\n\r\n    // Vertical line\r\n    ctx.moveTo(0, 0 - r);\r\n    ctx.lineTo(0, 0 + r);\r\n\r\n    // Horizontal line\r\n    ctx.moveTo(0 - r, 0);\r\n    ctx.lineTo(0 + r, 0);\r\n\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"red\";\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    if (ratio) {\r\n      var fontSize = Math.floor(canvas.width * 0.1);\r\n      ctx.font = fontSize + \"px serif\";\r\n      ctx.fillStyle = \"black\";\r\n      if (ratio < 0.8) {\r\n        ctx.fillText(\"Loaded\", 100, 100);\r\n        bullet = true;\r\n      } else {\r\n        ctx.fillText(\"Reload\", 100, 100);\r\n        if (bullet) {\r\n          shots = [...shots, [boxX + boxWidth / 2, boxY + r[3] / 2]];\r\n          bullet = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./WebCam.css\";\r\nimport * as handTrack from \"handtrackjs\";\r\nimport { Canvas } from \"../Canvas/Canvas\";\r\nimport { draw } from \"../../drawUtils/draw\";\r\n\r\nconst SIZE = 500;\r\n\r\nconst StreamVideo = () => {\r\n  var video = document.querySelector(\"#video\");\r\n  video.width = SIZE;\r\n  video.height = SIZE;\r\n  if (navigator.mediaDevices.getUserMedia) {\r\n    console.log(navigator.mediaDevices.getUserMedia);\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then(function (stream) {\r\n        video.srcObject = stream;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Something went wrong!\");\r\n      });\r\n  }\r\n  return video;\r\n};\r\n\r\nexport const WebCam = () => {\r\n  const [video, setVideo] = useState({});\r\n  const [model, setModel] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const modelParams = {\r\n      flipHorizontal: true, // flip e.g for video\r\n      imageScaleFactor: 1, // reduce input image size .\r\n      maxNumBoxes: 1, // maximum number of boxes to detect\r\n      iouThreshold: 0.5, // ioU threshold for non-max suppression\r\n      scoreThreshold: 0.85, // confidence threshold for predictions.\r\n    };\r\n    handTrack.load(modelParams).then((model) => {\r\n      setModel(model);\r\n      setVideo(StreamVideo());\r\n    });\r\n  }, []);\r\n\r\n  const detect = () => {\r\n    model.detect(video).then((predictions) => {\r\n      if (predictions) {\r\n        draw(predictions[0]?.bbox, video);\r\n      }\r\n      detect();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"container\" className={\"GameContainer\"}>\r\n      {model ? (\r\n        <React.Fragment>\r\n          <video autoPlay={true} id=\"video\"></video>\r\n          <button onClick={detect}>Predict Pose</button>\r\n          <Canvas id={\"myCanvas\"} />\r\n        </React.Fragment>\r\n      ) : (\r\n        <span className={\"LoadingSpan\"}>Loading model</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport { WebCam } from \"./components/WebCam/WebCam\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <WebCam />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}