{"version":3,"sources":["components/HelloWorld/HelloWorld.js","components/WebCam/WebCam.js","App.js","index.js"],"names":["onClickHandler","console","log","HelloWorld","className","onClick","bullet","shots","WebCam","useState","setPredictions","video","setVideo","undefined","model","setModel","useEffect","handTrack","flipHorizontal","imageScaleFactor","maxNumBoxes","iouThreshold","scoreThreshold","then","document","querySelector","width","height","navigator","mediaDevices","getUserMedia","stream","srcObject","catch","error","StreamVideo","id","Fragment","autoPlay","detect","predictions","draw","bbox","r","canvas","ctx","getContext","boxX","boxY","boxWidth","boxHeight","ratio","clearRect","save","beginPath","translate","moveTo","arc","Math","PI","lineTo","lineWidth","strokeStyle","stroke","restore","fontSize","floor","font","fillStyle","fillText","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e30a5541.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HelloWorld.css\";\r\n\r\nconst onClickHandler = () => {\r\n  console.log(\"Hello\");\r\n};\r\n\r\nexport const HelloWorld = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"Header\">Hello world!</h1>\r\n      <button onClick={onClickHandler} className=\"Button\">\r\n        Hello\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./WebCam.css\";\r\nimport * as handTrack from \"handtrackjs\";\r\n\r\nconst SIZE = 500;\r\nvar bullet = true;\r\nvar shots = []\r\n\r\nconst StreamVideo = () => {\r\n  var video = document.querySelector(\"#video\");\r\n  video.width = SIZE;\r\n  video.height = SIZE;\r\n  if (navigator.mediaDevices.getUserMedia) {\r\n    console.log(navigator.mediaDevices.getUserMedia);\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then(function (stream) {\r\n        video.srcObject = stream;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Something went wrong!\");\r\n      });\r\n  }\r\n  return video;\r\n};\r\n\r\n\r\nexport const WebCam = () => {\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [video, setVideo] = useState({});\r\n  const [model, setModel] = useState(undefined);\r\n\r\n  //console.log(\"Predictions:\", predictions?.[0]);\r\n  useEffect(() => {\r\n    const modelParams = {\r\n      flipHorizontal: true, // flip e.g for video\r\n      imageScaleFactor: 1, // reduce input image size .\r\n      maxNumBoxes: 1, // maximum number of boxes to detect\r\n      iouThreshold: 0.5, // ioU threshold for non-max suppression\r\n      scoreThreshold: 0.85, // confidence threshold for predictions.\r\n    };\r\n    handTrack.load(modelParams).then((model) => {\r\n      setModel(model);\r\n      setVideo(StreamVideo());\r\n    });\r\n  }, []);\r\n\r\n  const detect = () => {\r\n    model.detect(video).then((predictions) => {\r\n      //setPredictions((oldPredictions) => [...oldPredictions, predictions]);\r\n      setPredictions(predictions);\r\n\r\n      if (predictions !== undefined) {\r\n        draw(predictions[0]?.bbox, video);\r\n      }\r\n      detect();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      {model ? (\r\n        <React.Fragment>\r\n          <video autoPlay={true} id=\"video\"></video>\r\n          <button onClick={detect}>Predict Pose</button>\r\n          <canvas id=\"myCanvas\"></canvas>\r\n        </React.Fragment>\r\n      ) : (\r\n          <span>Loading model</span>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst draw = (r, video) => {\r\n  if (r !== undefined) {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    var ctx = canvas.getContext(\"2d\");\r\n\r\n    var boxX = r[0];\r\n    var boxY = r[1];\r\n    var boxWidth = r[2];\r\n    var boxHeight = r[3];\r\n    var ratio = boxWidth / boxHeight\r\n  \r\n\r\n    canvas.height = video.height;\r\n    canvas.width = video.width;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    //ctx.drawImage(video, 0, 0);\r\n\r\n    var r = canvas.width * 0.05;\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.translate(boxX + boxWidth / 2, boxY + boxHeight / 2);\r\n\r\n    // Circle\r\n    ctx.moveTo(0, 0);\r\n    ctx.arc(0, 0, r, 0, Math.PI * 2)\r\n\r\n    // Vertical line\r\n    ctx.moveTo(0, 0 - r);\r\n    ctx.lineTo(0, 0 + r);\r\n\r\n    // Horizontal line\r\n    ctx.moveTo(0 - r, 0);\r\n    ctx.lineTo(0 + r, 0);\r\n    \r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"red\";\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    if (ratio) {\r\n      var fontSize = Math.floor(canvas.width * 0.1);\r\n      ctx.font = fontSize + 'px serif';\r\n      ctx.fillStyle = 'black';\r\n      console.log(ratio)\r\n      if (ratio < 0.8) {\r\n        ctx.fillText(\"Loaded\", 100, 100)\r\n        bullet = true\r\n      }\r\n      else {\r\n        ctx.fillText(\"Reload\", 100, 100)\r\n        if (bullet) {\r\n          shots = [...shots, [boxX + boxWidth / 2, boxY + r[3] / 2]];\r\n          bullet = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(shots);\r\n  }\r\n};\r\n\r\n\r\n","import \"./App.css\";\r\nimport { HelloWorld } from \"./components/HelloWorld/HelloWorld\";\r\nimport { WebCam } from \"./components/WebCam/WebCam\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HelloWorld />\r\n      <WebCam />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}